import React, { useState, useEffect } from 'react';
import { Calendar } from './Calendar';
import { ProgressStats } from './ProgressStats';
import { Card, ThemeToggle, InstallPrompt, Button } from './ui';
import { AuthModal, UserProfile } from './auth';
import { usePWA } from '../hooks/usePWA';
import { useAuth } from '../hooks/useAuth';
import { useSupabaseData } from '../hooks/useSupabaseData';
import { User, LogIn } from 'lucide-react';

// Legacy interface for Calendar component compatibility
interface LegacyTrackedDay {
  date: string;
  completed: boolean;
  extraCold?: boolean;
  feltAmazing?: boolean;
}

export const ColdShowerTracker: React.FC = () => {
  const [currentMonth, setCurrentMonth] = useState(new Date());
  const [showInstallPrompt, setShowInstallPrompt] = useState(false);
  const [showAuthModal, setShowAuthModal] = useState(false);
  const [showUserProfile, setShowUserProfile] = useState(false);
  const { registerServiceWorker, isInstallable } = usePWA();
  const { user, isAuthenticated, isGuest } = useAuth();
  const { 
    trackedDays, 
    toggleDay, 
    setDayProperty,
    isOnline 
  } = useSupabaseData(user);

  useEffect(() => {
    // Register service worker and show install prompt
    registerServiceWorker();
    
    // Show install prompt after 30 seconds if installable
    const timer = setTimeout(() => {
      if (isInstallable) {
        setShowInstallPrompt(true);
      }
    }, 30000);

    return () => clearTimeout(timer);
  }, [registerServiceWorker, isInstallable]);

  // Legacy property mapping for Calendar component
  const handleSetDayProperty = (date: string, property: 'extraCold' | 'feltAmazing', value: boolean) => {
    const mappedProperty = property === 'extraCold' ? 'extra_cold' : 'felt_amazing';
    setDayProperty(date, mappedProperty, value);
  };

  const getCurrentStreak = () => {
    if (trackedDays.length === 0) return 0;
    
    const today = new Date();
    let streak = 0;
    let currentDate = new Date(today);
    
    while (currentDate >= new Date(Math.min(...trackedDays.map(d => new Date(d.date).getTime())))) {
      const dateStr = currentDate.toISOString().split('T')[0];
      const dayData = trackedDays.find(d => d.date === dateStr);
      
      if (dayData?.completed) {
        streak++;
      } else {
        break;
      }
      
      currentDate.setDate(currentDate.getDate() - 1);
    }
    
    return streak;
  };

  const getBestStreak = () => {
    if (trackedDays.length === 0) return 0;
    
    const sortedDays = trackedDays
      .filter(d => d.completed)
      .sort((a, b) => new Date(a.date).getTime() - new Date(b.date).getTime());
    
    let bestStreak = 0;
    let currentStreak = 0;
    let lastDate: Date | null = null;
    
    for (const day of sortedDays) {
      const currentDate = new Date(day.date);
      
      if (lastDate && currentDate.getTime() - lastDate.getTime() === 24 * 60 * 60 * 1000) {
        currentStreak++;
      } else {
        currentStreak = 1;
      }
      
      bestStreak = Math.max(bestStreak, currentStreak);
      lastDate = currentDate;
    }
    
    return bestStreak;
  };

  const getCompletedThisMonth = () => {
    const monthStr = currentMonth.toISOString().slice(0, 7);
    return trackedDays.filter(d => d.date.startsWith(monthStr) && d.completed).length;
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 to-teal-50 dark:from-gray-900 dark:to-blue-900 transition-colors duration-300" role="main">
      <div className="fixed top-4 right-4 z-40 flex items-center gap-2">
        <ThemeToggle />
        
        {/* Auth/Profile Button */}
        {isAuthenticated ? (
          <Button
            variant="secondary"
            size="sm"
            onClick={() => setShowUserProfile(true)}
            className="rounded-full w-10 h-10 p-0"
            aria-label="User profile"
          >
            <User size={18} className="text-blue-700" />
          </Button>
        ) : (
          <Button
            variant="secondary"
            size="sm"
            onClick={() => setShowAuthModal(true)}
            className="rounded-full w-10 h-10 p-0"
            aria-label="Sign in"
          >
            <LogIn size={18} className="text-blue-700" />
          </Button>
        )}
      </div>
      
      {/* Desktop Layout */}
      <div className="hidden lg:flex lg:min-h-screen lg:items-center lg:justify-center lg:p-8">
        <div className="w-full max-w-6xl grid grid-cols-2 gap-8 items-start">
          {/* Left Column - Header & Benefits */}
          <div className="space-y-8">
            {/* Header */}
            <header className="text-center">
              <h1 className="text-5xl font-bold text-blue-900 mb-4">
                COLD SHOWER CHALLENGE
              </h1>
              <p className="text-2xl text-blue-700 mb-2">
                30 Days to Better Health, Wealth & Happiness
              </p>
              <p className="text-lg text-teal-600 italic">
                Small discomfort, massive results
              </p>
            </header>

            {/* Benefits */}
            <section aria-labelledby="benefits-heading">
              <h2 id="benefits-heading" className="text-2xl font-bold text-blue-900 mb-6 text-center">Why Cold Showers?</h2>
              <div className="grid grid-cols-2 gap-4">
                <Card className="text-center hover:shadow-lg transition-all duration-200 hover:scale-105" padding="lg">
                  <div className="text-4xl mb-3" role="img" aria-label="Brain">üß†</div>
                  <div className="text-lg font-medium text-blue-800 mb-2">Mental Clarity</div>
                  <div className="text-sm text-gray-600">Improved focus and decision making</div>
                </Card>
                <Card className="text-center hover:shadow-lg transition-all duration-200 hover:scale-105" padding="lg">
                  <div className="text-4xl mb-3" role="img" aria-label="Muscle">üí™</div>
                  <div className="text-lg font-medium text-blue-800 mb-2">Increased Energy</div>
                  <div className="text-sm text-gray-600">Natural energy boost all day</div>
                </Card>
                <Card className="text-center hover:shadow-lg transition-all duration-200 hover:scale-105" padding="lg">
                  <div className="text-4xl mb-3" role="img" aria-label="Fire">üî•</div>
                  <div className="text-lg font-medium text-blue-800 mb-2">Faster Metabolism</div>
                  <div className="text-sm text-gray-600">Burns calories and boosts immunity</div>
                </Card>
                <Card className="text-center hover:shadow-lg transition-all duration-200 hover:scale-105" padding="lg">
                  <div className="text-4xl mb-3" role="img" aria-label="Shield">üõ°Ô∏è</div>
                  <div className="text-lg font-medium text-blue-800 mb-2">Stronger Immunity</div>
                  <div className="text-sm text-gray-600">Better resistance to illness</div>
                </Card>
              </div>
            </section>

            {/* Instructions */}
            <Card padding="lg">
              <h3 className="text-xl font-semibold text-blue-900 mb-4">How to Use</h3>
              <ul className="text-base text-gray-700 space-y-2">
                <li className="flex items-center gap-3">
                  <span className="text-blue-600">üëÜ</span>
                  <span>Click any day to mark cold shower completed</span>
                </li>
                <li className="flex items-center gap-3">
                  <span className="text-blue-600">‚è±Ô∏è</span>
                  <span>Aim for 2-3 minutes under cold water</span>
                </li>
                <li className="flex items-center gap-3">
                  <span className="text-blue-600">üöø</span>
                  <span>Finish your regular shower with cold</span>
                </li>
                <li className="flex items-center gap-3">
                  <span className="text-blue-600">üëá</span>
                  <span>Right-click for extra options</span>
                </li>
              </ul>
            </Card>
          </div>

          {/* Right Column - Progress & Calendar */}
          <div className="space-y-6">
            {/* Offline Indicator */}
            {!isOnline && (
              <Card className="bg-yellow-50 border-yellow-200">
                <div className="flex items-center gap-2">
                  <span className="text-yellow-600">üì±</span>
                  <p className="text-sm text-yellow-800">
                    You're offline. Changes will sync when you're back online.
                  </p>
                </div>
              </Card>
            )}

            {/* Guest Mode Notice */}
            {isGuest && (
              <Card className="bg-blue-50 border-blue-200">
                <div className="text-center">
                  <p className="text-sm text-blue-800 mb-2">
                    You're using guest mode. Your data is saved locally.
                  </p>
                  <Button
                    variant="primary"
                    size="sm"
                    onClick={() => setShowAuthModal(true)}
                    leftIcon={<LogIn size={16} />}
                  >
                    Sign Up to Sync Data
                  </Button>
                </div>
              </Card>
            )}

            {/* Progress Stats */}
            <section aria-labelledby="progress-heading">
              <h2 id="progress-heading" className="sr-only">Progress Statistics</h2>
              <ProgressStats
                currentStreak={getCurrentStreak()}
                bestStreak={getBestStreak()}
                completedThisMonth={getCompletedThisMonth()}
              />
            </section>

            {/* Calendar */}
            <section aria-labelledby="calendar-heading">
              <h2 id="calendar-heading" className="sr-only">Cold Shower Calendar</h2>
              <Calendar
                currentMonth={currentMonth}
                setCurrentMonth={setCurrentMonth}
                trackedDays={trackedDays.map(day => ({
                  date: day.date,
                  completed: day.completed,
                  extraCold: day.extra_cold,
                  feltAmazing: day.felt_amazing
                })) as LegacyTrackedDay[]}
                onToggleDay={toggleDay}
                onSetDayProperty={handleSetDayProperty}
              />
            </section>

            {/* Legend */}
            <Card>
              <h3 className="font-semibold text-blue-900 mb-3">Legend</h3>
              <div className="grid grid-cols-3 gap-4 text-sm">
                <div className="flex items-center gap-2">
                  <span className="text-green-600 text-lg">‚úÖ</span>
                  <span className="text-gray-700">Completed cold shower</span>
                </div>
                <div className="flex items-center gap-2">
                  <span className="text-blue-600 text-lg">‚ùÑÔ∏è</span>
                  <span className="text-gray-700">Extra cold day</span>
                </div>
                <div className="flex items-center gap-2">
                  <span className="text-orange-500 text-lg">üî•</span>
                  <span className="text-gray-700">Felt amazing after</span>
                </div>
              </div>
            </Card>

            {/* CTA */}
            <footer className="text-center">
              <div className="text-lg text-teal-600 italic mb-4">
                "Every cold shower is a vote for the person you're becoming"
              </div>
              <p className="text-base text-blue-700 mb-2">
                Share your progress with #ColdShowerChallenge
              </p>
              <p className="text-sm text-gray-600">
                @bigdaddysbigtips
              </p>
            </footer>
          </div>
        </div>
      </div>

      {/* Mobile Layout */}
      <div className="lg:hidden p-4">
        <div className="max-w-md mx-auto">
          {/* Offline Indicator */}
          {!isOnline && (
            <Card className="mb-4 bg-yellow-50 border-yellow-200">
              <div className="flex items-center gap-2">
                <span className="text-yellow-600">üì±</span>
                <p className="text-sm text-yellow-800">
                  You're offline. Changes will sync when you're back online.
                </p>
              </div>
            </Card>
          )}

          {/* Guest Mode Notice */}
          {isGuest && (
            <Card className="mb-4 bg-blue-50 border-blue-200">
              <div className="text-center">
                <p className="text-sm text-blue-800 mb-2">
                  You're using guest mode. Your data is saved locally.
                </p>
                <Button
                  variant="primary"
                  size="sm"
                  onClick={() => setShowAuthModal(true)}
                  leftIcon={<LogIn size={16} />}
                >
                  Sign Up to Sync Data
                </Button>
              </div>
            </Card>
          )}

          {/* Header */}
          <header className="text-center mb-8">
            <h1 className="text-3xl font-bold text-blue-900 mb-2">
              COLD SHOWER CHALLENGE
            </h1>
            <p className="text-lg text-blue-700 mb-1">
              30 Days to Better Health, Wealth & Happiness
            </p>
            <p className="text-sm text-teal-600 italic">
              Small discomfort, massive results
            </p>
          </header>

          {/* Benefits */}
          <section className="mb-8" aria-labelledby="benefits-heading">
            <h2 id="benefits-heading" className="sr-only">Benefits of Cold Showers</h2>
            <div className="grid grid-cols-2 gap-3">
              <Card className="text-center hover:shadow-lg transition-all duration-200 hover:scale-105" padding="sm">
                <div className="text-2xl mb-1" role="img" aria-label="Brain">üß†</div>
                <div className="text-sm font-medium text-blue-800">Mental Clarity</div>
              </Card>
              <Card className="text-center hover:shadow-lg transition-all duration-200 hover:scale-105" padding="sm">
                <div className="text-2xl mb-1" role="img" aria-label="Muscle">üí™</div>
                <div className="text-sm font-medium text-blue-800">Increased Energy</div>
              </Card>
              <Card className="text-center hover:shadow-lg transition-all duration-200 hover:scale-105" padding="sm">
                <div className="text-2xl mb-1" role="img" aria-label="Fire">üî•</div>
                <div className="text-sm font-medium text-blue-800">Faster Metabolism</div>
              </Card>
              <Card className="text-center hover:shadow-lg transition-all duration-200 hover:scale-105" padding="sm">
                <div className="text-2xl mb-1" role="img" aria-label="Shield">üõ°Ô∏è</div>
                <div className="text-sm font-medium text-blue-800">Stronger Immunity</div>
              </Card>
            </div>
          </section>

          {/* Progress Stats */}
          <section aria-labelledby="progress-heading">
            <h2 id="progress-heading" className="sr-only">Progress Statistics</h2>
            <ProgressStats
              currentStreak={getCurrentStreak()}
              bestStreak={getBestStreak()}
              completedThisMonth={getCompletedThisMonth()}
            />
          </section>

          {/* Calendar */}
          <section aria-labelledby="calendar-heading">
            <h2 id="calendar-heading" className="sr-only">Cold Shower Calendar</h2>
            <Calendar
              currentMonth={currentMonth}
              setCurrentMonth={setCurrentMonth}
              trackedDays={trackedDays.map(day => ({
                date: day.date,
                completed: day.completed,
                extraCold: day.extra_cold,
                feltAmazing: day.felt_amazing
              })) as LegacyTrackedDay[]}
              onToggleDay={toggleDay}
              onSetDayProperty={handleSetDayProperty}
            />
          </section>

          {/* Legend */}
          <Card className="mb-6">
            <h3 className="font-semibold text-blue-900 mb-3">Legend</h3>
            <div className="space-y-2 text-sm">
              <div className="flex items-center gap-2">
                <span className="text-green-600">‚úÖ</span>
                <span className="text-gray-700">Completed cold shower</span>
              </div>
              <div className="flex items-center gap-2">
                <span className="text-blue-600">‚ùÑÔ∏è</span>
                <span className="text-gray-700">Extra cold day</span>
              </div>
              <div className="flex items-center gap-2">
                <span className="text-orange-500">üî•</span>
                <span className="text-gray-700">Felt amazing after</span>
              </div>
            </div>
          </Card>

          {/* Instructions */}
          <Card className="mb-6">
            <h3 className="font-semibold text-blue-900 mb-3">Instructions</h3>
            <ul className="text-sm text-gray-700 space-y-1">
              <li>‚Ä¢ Tap each day to mark completed</li>
              <li>‚Ä¢ Aim for 2-3 minutes under cold water</li>
              <li>‚Ä¢ Finish your regular shower with cold</li>
              <li>‚Ä¢ Long press for extra options</li>
            </ul>
          </Card>

          {/* Motivation */}
          <div className="text-center text-sm text-teal-600 italic mb-4" role="complementary">
            "Every cold shower is a vote for the person you're becoming"
          </div>

          {/* CTA */}
          <footer className="text-center">
            <p className="text-sm text-blue-700 mb-2">
              Share your progress with #ColdShowerChallenge
            </p>
            <p className="text-xs text-gray-600">
              @bigdaddysbigtips
            </p>
          </footer>
        </div>
      </div>
              <span className="text-yellow-600">üì±</span>
              <p className="text-sm text-yellow-800">
                You're offline. Changes will sync when you're back online.
              </p>
            </div>
          </Card>
        )}

        {/* Guest Mode Notice */}
        {isGuest && (
          <Card className="mb-4 bg-blue-50 border-blue-200">
            <div className="text-center">
              <p className="text-sm text-blue-800 mb-2">
                You're using guest mode. Your data is saved locally.
              </p>
              <Button
                variant="primary"
                size="sm"
                onClick={() => setShowAuthModal(true)}
                leftIcon={<LogIn size={16} />}
              >
                Sign Up to Sync Data
              </Button>
            </div>
          </Card>
        )}

        {/* Header */}
        <header className="text-center mb-8">
          <h1 className="text-3xl font-bold text-blue-900 mb-2">
            COLD SHOWER CHALLENGE
          </h1>
          <p className="text-lg text-blue-700 mb-1">
            30 Days to Better Health, Wealth & Happiness
          </p>
          <p className="text-sm text-teal-600 italic">
            Small discomfort, massive results
          </p>
        </header>

        {/* Benefits */}
        <section className="mb-8" aria-labelledby="benefits-heading">
          <h2 id="benefits-heading" className="sr-only">Benefits of Cold Showers</h2>
          <div className="grid grid-cols-2 gap-3">
            <Card className="text-center hover:shadow-lg transition-all duration-200 hover:scale-105" padding="sm">
              <div className="text-2xl mb-1" role="img" aria-label="Brain">üß†</div>
              <div className="text-sm font-medium text-blue-800">Mental Clarity</div>
            </Card>
            <Card className="text-center hover:shadow-lg transition-all duration-200 hover:scale-105" padding="sm">
              <div className="text-2xl mb-1" role="img" aria-label="Muscle">üí™</div>
              <div className="text-sm font-medium text-blue-800">Increased Energy</div>
            </Card>
            <Card className="text-center hover:shadow-lg transition-all duration-200 hover:scale-105" padding="sm">
              <div className="text-2xl mb-1" role="img" aria-label="Fire">üî•</div>
              <div className="text-sm font-medium text-blue-800">Faster Metabolism</div>
            </Card>
            <Card className="text-center hover:shadow-lg transition-all duration-200 hover:scale-105" padding="sm">
              <div className="text-2xl mb-1" role="img" aria-label="Shield">üõ°Ô∏è</div>
              <div className="text-sm font-medium text-blue-800">Stronger Immunity</div>
            </Card>
          </div>
        </section>

        {/* Progress Stats */}
        <section aria-labelledby="progress-heading">
          <h2 id="progress-heading" className="sr-only">Progress Statistics</h2>
          <ProgressStats
            currentStreak={getCurrentStreak()}
            bestStreak={getBestStreak()}
            completedThisMonth={getCompletedThisMonth()}
          />
        </section>

        {/* Calendar */}
        <section aria-labelledby="calendar-heading">
          <h2 id="calendar-heading" className="sr-only">Cold Shower Calendar</h2>
          <Calendar
            currentMonth={currentMonth}
            setCurrentMonth={setCurrentMonth}
            trackedDays={trackedDays.map(day => ({
              date: day.date,
              completed: day.completed,
              extraCold: day.extra_cold,
              feltAmazing: day.felt_amazing
            })) as LegacyTrackedDay[]}
            onToggleDay={toggleDay}
            onSetDayProperty={handleSetDayProperty}
          />
        </section>

        {/* Legend */}
        <Card className="mb-6">
          <h3 className="font-semibold text-blue-900 mb-3">Legend</h3>
          <div className="space-y-2 text-sm">
            <div className="flex items-center gap-2">
              <span className="text-green-600">‚úÖ</span>
              <span className="text-gray-700">Completed cold shower</span>
            </div>
            <div className="flex items-center gap-2">
              <span className="text-blue-600">‚ùÑÔ∏è</span>
              <span className="text-gray-700">Extra cold day</span>
            </div>
            <div className="flex items-center gap-2">
              <span className="text-orange-500">üî•</span>
              <span className="text-gray-700">Felt amazing after</span>
            </div>
          </div>
        </Card>

        {/* Instructions */}
        <Card className="mb-6">
          <h3 className="font-semibold text-blue-900 mb-3">Instructions</h3>
          <ul className="text-sm text-gray-700 space-y-1">
            <li>‚Ä¢ Tap each day to mark completed</li>
            <li>‚Ä¢ Aim for 2-3 minutes under cold water</li>
            <li>‚Ä¢ Finish your regular shower with cold</li>
            <li>‚Ä¢ Long press for extra options</li>
          </ul>
        </Card>

        {/* Motivation */}
        <div className="text-center text-sm text-teal-600 italic mb-4" role="complementary">
          "Every cold shower is a vote for the person you're becoming"
        </div>

        {/* CTA */}
        <footer className="text-center">
          <p className="text-sm text-blue-700 mb-2">
            Share your progress with #ColdShowerChallenge
          </p>
          <p className="text-xs text-gray-600">
            @bigdaddysbigtips
          </p>
        </footer>
      </div>

      {/* Install Prompt */}
      {showInstallPrompt && (
        <InstallPrompt onDismiss={() => setShowInstallPrompt(false)} />
      )}

      {/* Auth Modal */}
      <AuthModal
        isOpen={showAuthModal}
        onClose={() => setShowAuthModal(false)}
        initialMode="signin"
      />

      {/* User Profile */}
      <UserProfile
        isOpen={showUserProfile}
        onClose={() => setShowUserProfile(false)}
      />
    </div>
  );
};